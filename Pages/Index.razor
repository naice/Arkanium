
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Arkanium.Controls.List
@using Arkanium.Model
@using Arkanium.Services

@page "/"
@attribute [NavigationPage("Items", icon: "arrow_circle_right", sort: 0)]

@inject HttpClient Http
@inject IClipboardService Clipboard
@inject ILogger<Index> Log

<div style="display: flex; align-items: center; flex-wrap: nowrap; justify-content: flex-end; margin-bottom: 0.5rem; height: 38px; overflow-y: hidden;">
    <RadzenTextBox @oninput="(x) => Search(x?.Value?.ToString())" Placeholder="Find items..." style="flex: 1"/>
    <div style="flex: 0 0 0.5rem;"></div>
    <RadzenButton Icon="search" style="flex: 0 0 32px;"/>
</div>
<div style="display: flex; align-items: center; flex-wrap: nowrap; justify-content: flex-end; margin-bottom: 0.5rem; height: 38px; overflow-y: hidden;">
    <RadzenNumeric ShowUpDown="true" TValue="int" Min="1" Max="10000" @bind-Value=@_count Placeholder="Item count" style="flex: 1"/>
    <div style="flex: 0 0 0.5rem;"></div>
    <RadzenButton Text="1" style="flex: 0 0 1;" Size="ButtonSize.Small" Click="@(() => _count = 1)"/>
    <div style="flex: 0 0 0.5rem;"></div>
    <RadzenButton Text="10" style="flex: 0 0 1;" Size="ButtonSize.Small" Click="@(() => _count = 10)"/>
    <div style="flex: 0 0 0.5rem;"></div>
    <RadzenButton Text="100" style="flex: 0 0 1;" Size="ButtonSize.Small" Click="@(() => _count = 100)"/>
    <div style="flex: 0 0 0.5rem;"></div>
    <RadzenButton Text="500" style="flex: 0 0 1;" Size="ButtonSize.Small" Click="@(() => _count = 500)"/>
</div>

<List Items="@(_filtered ?? _data)" TItem="ArkItemData" Context="item">
    <ItemContent>
        <RadzenCard Style="width: 100%; padding:0.5rem" class="rz-mb-2">
            <div style="display: flex; align-items: center; flex-wrap: nowrap; justify-content: flex-end;">
                <img src="@(item.Image32Source)" style="width: 32px; height: 32px; flex : 0 0 32px" />
                <div style="flex: 0 0 0.5rem;"></div>
                <div class="rz-color-secondary" style="flex: 1; text-overflow: ellipsis; text-wrap: wrap; overflow:hidden;">
                    @(item.ItemName)
                </div>
                <div class="rz-color-secondary" style="flex: 1; min-width: 90px; text-overflow: ellipsis; text-wrap: wrap; overflow:hidden;">
                    @(item.ItemId)
                </div>
                <div style="flex: 0 0 0.5rem;"></div>
                <RadzenButton style="flex: 0 0 1;" Icon="content_copy" Size="ButtonSize.Small" Click="@(() => CopyGFICode(item, _count))"/>
            </div>
        </RadzenCard>
    </ItemContent>
    <Placeholder>
        <div>Loading..</div>
    </Placeholder>
</List>

@code
{
    private int _count = 1;
    private ICollection<ArkItemData> _data = Array.Empty<ArkItemData>();
    private ICollection<ArkItemData>? _filtered = null;

    private async void CopyGFICode(ArkItemData item, int count)
    {
        await Clipboard.CopyToClipboard(item.GFICode.Replace("1 1 0", $"{count} 1 0"));
    }

    private void Search(string? text)
    {
        if (text == null || text.Length < 3) 
        {
            _filtered = null;
            return;
        }

        var searchToken = text.ToLowerInvariant();

        _filtered = 
            _data.Where(x => 
                    x.ItemName.ToLowerInvariant().Contains(searchToken)
                    || x.ItemId.ToLowerInvariant().Contains(searchToken))
                .ToArray();
    }
    protected override async Task OnInitializedAsync()
    {
        _filtered = _data = await Http.GetFromJsonAsync<ArkItemData[]>("/data-item.json") ?? Array.Empty<ArkItemData>();

        await base.OnInitializedAsync();
    }
}